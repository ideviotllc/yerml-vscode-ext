{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "YERML",
	"scopeName": "source.yerml", 
	"patterns": [
		{
			"include": "#directive"
		},
		{
			"name": "entity.other.document.begin.yerml",
			"match": "^---"
		},
		{
			"name": "entity.other.document.end.yerml",
			"match": "^\\.{3}"
		},
		{
			"include": "#comment"
		},
		{
			"include": "#import"
		},
		{
			"include": "#import-path"
		},
		{
			"include": "#entity-definition"
		}
	],
	"repository": {
		"comment": {
			"begin": "(?:(^[ \\t]*)|[ \\t]+)(?=#\\p{Print}*$)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.whitespace.comment.leading.yerml"
				}
			},
			"end": "(?!\\G)",
			"patterns": [
				{
					"begin": "#",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment.yerml"
						}
					},
					"end": "\\n",
					"name": "comment.line.number-sign.yerml"
				}
			]
		},
		"directive": {
			"begin": "^%",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.directive.begin.yerml"
				}
			},
			"end": "(?=$|[ \\t]+($|#))",
			"name": "meta.directive.yerml",
			"patterns": [
				{
					"captures": {
						"1": {
							"name": "keyword.other.directive.yerml.yerml"
						},
						"2": {
							"name": "constant.numeric.yerml-version.yerml"
						}
					},
					"match": "\\G(YERML)[ \\t]+(\\d+\\.\\d+)"
				},
				{
					"match": "\\S+",
					"name": "invalid.illegal.unrecognized.yerml"
				}
			]
		},
		"import": {
			"name": "keyword.other.import.yerml",
			"match": "^import(?!:)"
		},
		"import-path": {
			"begin": "(?<=^import[ \\t]+)\"",
			"beginCaptures": {
				"0": {
					"name": "string.quoted.double.import.path.yerml"
				}
			},
			"end": "\"",
			"endCaptures": {
				"0": {
					"name": "string.quoted.double.import.path.yerml"
				}
			},
			"patterns": [
				{
					"name": "string.quoted.double.import.path.yerml",
					"match": "\\/?((?=[^\\/\\\\\\0])[^\\/\\\\\\0]+[\\/\\\\])*(?=[^\"\\0])[^\"\\0]+"
				},
				{
					"match": "\\S+",
					"name": "invalid.illegal.unrecognized.yerml"
				}
			]
			
		},
		"entity-definition": {
			"patterns": [
				{
					"begin": "^[ \\t]*(\\w+\\??)[ \\t]*?(:|(?=( #)|\\n))",
					"end": "(?=[ \\t]*(#|\\n))",
					"beginCaptures": {
						"1": {
							"patterns": [
								{
									"include": "#entity-inst-name"
								},
								{
									"include": "#entity-type-name"
								},
								{
									"match": ".+?",
									"name": "invalid.illegal.expected-inst-or-type-name.yerml"
								}
							]
						}
					},
					"patterns": [
						{
							"include": "#entity-desc-count"
						},
						{
							"include": "#entity-desc-type"
						},
						{
							"include": "#entity-desc-constraint"
						},
						{
							"match": ".+?",
							"name": "invalid.illegal.expected-inst-or-type-name.yerml"
						}
					]
				},
				{
					"match": "^.+?(?=( #)|\\n)",
					"name": "invalid.illegal.expected-inst-or-type-name.yerml"
				}
			]
			
		},
		"entity-desc-count": {
			"name": "constant.numeric.entity.count.yerml",
			"match": "((?<![=<>][ \\t]*|\\w)([*+-]|\\d+[+-]?|\\d+-\\d+)(?=([^\"\\\\]*(\\\\.|\"([^\"\\\\]*\\\\.)*[^\"\\\\]*\"))*[^\"]*$))(?!.*?\\g<1>)"
		},
		"entity-desc-type": {
			"match": "((([A-Z]\\w*)(?![ \\t]*\\))([ \\t]*(\\()[ \\t]*(\\g<3>)[ \\t]*(\\)))?)(?=([^\"\\\\]*(\\\\.|\"([^\"\\\\]*\\\\.)*[^\"\\\\]*\"))*[^\"]*$))(?![^#]*?\\g<1>)",
			"captures": {
				"1": {
					"name": "entity.name.type.1.yerml"
				},
				"5": {
					"name": "keyword.operator.entity.desc.type.inherit.open.yerml"
				},
				"7": {
					"name": "keyword.operator.entity.desc.type.inherit.close.yerml"
				}

			}
		},		
		"entity-desc-constraint": {
			"begin": "(<=|>=|!=|:=|_=|<|>|=)[ \\t]*",
			"beginCaptures": {
				"1": {
					"name": "keyword.operator.entity.constraint.yerml"
				}
			},
			"end": "(?=[ \\t<>:!_=]|$)",
			"patterns": [
				{
					"include": "#string-quoted-double"
				},
				{
					"include": "#string-quoted-single"
				},
				{
					"include": "#entity-inst-name"
				},
				{
					"include": "#scalar"
				}
			]
		},
		"entity-inst-name": {
			"name": "variable.parameter.yerml",
			"match": "_*[a-z]\\w*"
		},
		"entity-type-name": {
			"name": "entity.name.type.yerml",
			"match": "[A-Z]\\w*"
		},		
		"string-quoted-double": {
			"name": "string.quoted.double.entity.constraint.string.yerml",
			"match": "r?\"(?:(?=(\\\\?))\\1.)*?\""
		},
		"string-quoted-single": {
			"name": "string.quoted.single.entity.constraint.string.yerml",
			"match": "r?'(?:(?=(\\\\?))\\1.)*?'"
		},
		"scalar": {
			"patterns": [
				{
					"include": "#integer"
				},
				{
					"include": "#real-number"
				}
			]
		},
		"integer": {
			"name": "constant.numeric.integer.yerml",
			"match": "-?\\d+"
		},
		"unsigned-real-number": {
			"name": "constant.numeric.real.unsigned.yerml",
			"match": "\\d+\\.\\d*"
		},
		"real-number": {
			"name": "constant.numeric.real.signed.yerml",
			"match": "-?\\d+\\.\\d*"
		}
	}
}